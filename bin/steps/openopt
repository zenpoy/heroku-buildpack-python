#!/usr/bin/env bash

# This script serves as the openopt build step of the
# [**Python Buildpack**](https://github.com/heroku/heroku-buildpack-python) 
# compiler. 
# 
# A [buildpack](http://devcenter.heroku.com/articles/buildpacks) is an 
# adapter between a Python application and Heroku's runtime.
#
# This script is invoked by [`bin/compile`](/).
VENDORED_GIT_NAME="openopt-bdist"
VENDORED_GIT_REPO="git@github.com:wyn/${VENDORED_GIT_NAME}.git"
# The location of the pre-compiled bdist
VENDORED_BINARIES="openopt-0.38"

# If numpy or scipy exists within setup.py, use vendored binaries.
if (grep -iq "openopt" setup.py) then
  echo "-----> Noticed openopt. Bootstrapping with prebuilt binaries."
  cd .heroku
  echo "-----> heroku contents: $(ls)"

  ## check whether this has happened already
  ## set BLAS/LAPACK/ATLAS
  if [ -d "venv/lib/python2.7/site-packages/openopt*" ]; then
    echo "-----> Using cached openopt."
  else
    echo "-----> Creating/downloading bdist."
    # Download and extract everything into target vendor directory.
    git clone ${VENDORED_GIT_REPO} > /dev/null
    echo "-----> heroku contents: $(ls)"
    echo "-----> heroku binaries contents: $(ls ${VENDORED_GIT_NAME})"
    tar -xvf ${VENDORED_GIT_NAME}/${VENDORED_BINARIES}.tar.gz > /dev/null
  fi
  
  if [ -d ${VENDORED_GIT_NAME} ]; then
    rm -rf ${VENDORED_GIT_NAME}
  fi
  cd ..
fi



